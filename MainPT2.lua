--[[
fuck off
]]--

do local v0=0;local v1;local v2;local v3;local v4;local v5;local v6;local v7;local v8;local v9;local v10;local v11;local v12;local v13;local v14;local v15;while true do if (v0==5) then function v15(v16,v17,...)local v18=1;local v19;v16=v5(v4(v16,5),"..",function(v30)if (v2(v30,2)==79) then v19=v1(v4(v30,1,1));return "";else local v66=v3(v1(v30,16));if v19 then local v75=v6(v66,v19);v19=nil;return v75;else return v66;end end end);local function v20(v31,v32,v33)if v33 then local v67=1571 -(301 + 1270);local v68;while true do if (v67==(935 -(546 + 389))) then v68=(v31/(((3 -2) + 1)^(v32-(1392 -(818 + 573)))))%((2 + 0)^(((v33-(1443 -(813 + 629))) -(v32-(476 -(230 + 245)))) + (521 -((149 -90) + 461))));return v68-(v68%((683 -(634 + 48)) + 0));end end else local v69=(1263 -(111 + 1150))^(v32-1);return (((v31%(v69 + v69))>=v69) and (1 + 0)) or (1003 -(131 + 872));end end local function v21()local v38=v2(v16,v18,v18);v18=v18 + 1;return v38;end local function v22()local v39=1846 -(693 + 1153);local v40;local v41;while true do if (v39==(1656 -(1557 + 99))) then v40,v41=v2(v16,v18,v18 + 2 + 0);v18=v18 + (171 -(65 + 104));v39=3 -(2 + 0);end if (v39==(1 + 0)) then return (v41 * (1515 -(143 + 1116))) + v40;end end end local function v23()local v42=0 -0;local v43;local v44;local v45;local v46;while true do if (v42==(1 + 0)) then return (v46 * (11453250 + 5323966)) + (v45 * 65536) + (v44 * (167 + (1606 -(812 + 705)))) + v43;end if (v42==(0 + 0)) then v43,v44,v45,v46=v2(v16,v18,v18 + (874 -(553 + 318)));v18=v18 + 4 + 0;v42=1;end end end local function v24()local v47=0 -0;local v48;local v49;while true do if (((0 -0) -0)==v47) then v48=v23();v49=v23();v47=1130 -(249 + 880);end if (v47==(1290 -(850 + 439))) then return (( -(2 + 0) * v20(v49,79 -47)) + (1 -(1691 -(735 + 956)))) * ((6 -4)^(v20(v49,48 -(64 -37),31 + 0) -(2104 -(455 + 626)))) * ((((v20(v49,1 + 0,75 -55) * ((647 -((1426 -872) + 91))^((1155 + 235) -(658 + 700)))) + v48)/((1 + 1)^52)) + 1);end end end local function v25(v34)local v50=0 -0;local v51;local v52;while true do if (v50==(3 + 0 + 0)) then return v7(v52);end if (v50==(0 + 0)) then v51=nil;if  not v34 then local v90=0;while true do if (v90==(787 -(290 + 497))) then v34=v23();if (v34==(0 + 0)) then return "";end break;end end end v50=2 -1;end if (v50==(6 -4)) then v52={};for v76=1 + (0 -0), #v51 do v52[v76]=v3(v2(v4(v51,v76,v76)));end v50=3 + 0;end if (v50==(1 -0)) then v51=v4(v16,v18,(v18 + v34) -(3 -2));v18=v18 + v34;v50=2 + 0;end end end local v26=v23;local function v27(...)return {...},v12("#",...);end local function v28()local v53=267 -(53 + 214);local v54;local v55;local v56;local v57;local v58;local v59;local v60;local v61;local v62;while true do if (v53==(1 -0)) then v56=nil;v57=nil;v53=2;end if (v53~=(1894 -(1107 + 785))) then else v58=nil;v59=nil;v53=7 -4;end if (v53==0) then v54=1613 -(1331 + 282);v55=nil;v53=1;end if (v53~=(1639 -(911 + 725))) then else v60=nil;v61=nil;v53=4 + 0;end if (v53~=4) then else v62=nil;while true do if (v54~=(2 -1)) then else local v94=0;while true do if (v94~=1) then else v54=3 -1;break;end if (v94~=(0 + 0)) then else v57=nil;v58=nil;v94=1;end end end if (v54~=2) then else v59=nil;v60=nil;v54=3 + 0;end if (v54~=4) then else while true do if ((1 + 0)==v55) then local v99=0;local v100;while true do if (v99==(0 -0)) then v100=0 -0;while true do if (v100~=0) then else local v106=927 -(335 + 592);while true do if (v106~=(982 -(305 + 676))) then else v100=815 -(102 + 712);break;end if (v106~=0) then else v58=nil;v59=nil;v106=1 + 0;end end end if ((1 -0)==v100) then v55=2;break;end end break;end end end if (v55~=(0 + 0)) then else local v101=0;while true do if (v101==(1179 -(279 + 900))) then v56=0 + 0;v57=nil;v101=1 + 0;end if (v101==1) then v55=2 -1;break;end end end if ((2 + 1)==v55) then v62=nil;while true do local v102=0;while true do if (v102~=(1 -0)) then else if (v56~=0) then else local v107=0 -0;local v108;while true do if ((0 -0)==v107) then v108=0 + 0;while true do if (v108~=1) then else v59={};v56=1;break;end if (v108~=(0 -0)) then else local v118=0 -0;local v119;while true do if (v118==0) then v119=0 + 0;while true do if (v119==1) then v108=1;break;end if (v119~=(0 + 0)) then else local v238=0 + 0;while true do if (v238~=(592 -(246 + 346))) then else v57={};v58={};v238=1;end if (v238~=1) then else v119=1;break;end end end end break;end end end end break;end end end if (v56~=(1 -0)) then else local v109=0 + 0;local v110;local v111;while true do if ((0 -0)~=v109) then else v110=0 + 0;v111=nil;v109=1 + 0;end if (v109~=1) then else while true do if (v110==(788 -(467 + 321))) then v111=1047 -(33 + 1014);while true do if (v111==0) then local v223=142 -(119 + 23);while true do if (v223==1) then v111=1 + 0;break;end if (v223~=(1667 -(1513 + 154))) then else local v239=0;while true do if (v239==(1 + 0)) then v223=3 -2;break;end if (0==v239) then v60={v57,v58,nil,v59};v61=v23();v239=1 + 0;end end end end end if (v111~=(3 -2)) then else v62={};v56=614 -(369 + 243);break;end end break;end end break;end end end break;end if (v102~=(0 -0)) then else local v105=0 + 0;while true do if ((1003 -(343 + 660))==v105) then if (v56==(7 -4)) then local v113=541 -(528 + 13);local v114;local v115;while true do if (v113~=(2 -1)) then else while true do if (0~=v114) then else v115=1962 -(1328 + 634);while true do local v227=0 -0;while true do if (v227~=(0 -0)) then else if (v115==(1589 -(407 + 1182))) then local v289=0;local v290;while true do if (v289~=(0 + 0)) then else v290=0 + 0;while true do if (v290==1) then v115=1364 -(29 + 1334);break;end if (v290~=(0 + 0)) then else local v344=1075 -(528 + 547);while true do if (v344~=(519 -(472 + 47))) then else for v361=1,v23() do v58[v361-(1 -0)]=v28();end for v363=1,v23() do v59[v363]=v23();end v344=1301 -(187 + 1113);end if ((1288 -(888 + 399))==v344) then v290=1;break;end end end end break;end end end if ((470 -(357 + 112))~=v115) then else return v60;end break;end end end break;end end break;end if (v113==0) then v114=0 -0;v115=nil;v113=1 + 0;end end end if (v56==2) then local v116=0 -0;local v117;while true do if (v116==(1639 -(388 + 1251))) then v117=0 -0;while true do if (v117~=(1 + 0)) then else for v228=1 + 0,v23() do local v229=0 -0;local v230;while true do if (v229~=0) then else v230=v21();if (v20(v230,1 + 0,1016 -(15 + 1000))==0) then local v291=0 + 0;local v292;local v293;local v294;local v295;local v296;while true do if (v291~=(0 -0)) then else v292=0;v293=nil;v291=2 -1;end if ((1 + 0)==v291) then local v320=0;while true do if (v320==0) then v294=nil;v295=nil;v320=4 -3;end if (v320==1) then v291=1 + 1;break;end end end if (v291==(5 -3)) then v296=nil;while true do if (v292==(0 + 0)) then local v345=888 -(263 + 625);while true do if (v345~=(227 -(71 + 155))) then else v292=1 -0;break;end if (v345~=(0 + 0)) then else local v353=16 -(10 + 6);while true do if (v353==0) then v293=0 -0;v294=nil;v353=1;end if (v353~=(1 + 0)) then else v345=1 -0;break;end end end end end if (v292~=(449 -(37 + 410))) then else while true do if (v293~=3) then else if (v20(v295,7 -4,3)==(1 + 0)) then v296[4]=v62[v296[13 -9]];end v57[v228]=v296;break;end if (v293==(2 + 0)) then local v355=0;while true do if (v355~=1) then else v293=7 -4;break;end if (v355~=(0 + 0)) then else local v370=0 -0;while true do if (v370~=(1563 -(18 + 1544))) then else v355=1;break;end if ((16 -(6 + 10))==v370) then local v374=1355 -(428 + 927);while true do if (v374~=(259 -(231 + 28))) then else if (v20(v295,973 -(864 + 108),1252 -(547 + 704))==(1774 -(1271 + 502))) then v296[2]=v62[v296[5 -3]];end if (v20(v295,1 + 1,4 -2)~=(1 + 0)) then else v296[3]=v62[v296[539 -(151 + 385)]];end v374=76 -(63 + 12);end if (v374~=1) then else v370=1 + 0;break;end end end end end end end if (v293~=(0 + 0)) then else local v356=0 + 0;while true do if (v356~=1) then else v293=1 + 0;break;end if (v356~=(1300 -(864 + 436))) then else local v371=0 + 0;while true do if (v371==1) then v356=1;break;end if (v371==(244 -(127 + 117))) then v294=v20(v230,1 + 1,3);v295=v20(v230,2 + 2,6);v371=938 -(280 + 657);end end end end end if (1~=v293) then else local v357=0;local v358;while true do if (v357~=(0 -0)) then else v358=0 + 0;while true do if (v358==(0 + 0)) then local v375=0;while true do if (v375==(2000 -(261 + 1738))) then v358=1 + 0;break;end if (v375~=(916 -(906 + 10))) then else v296={v22(),v22(),nil,nil};if (v294==(0 -0)) then local v380=0 + 0;local v381;while true do if (0~=v380) then else v381=0;while true do if (v381==(1020 -(8 + 1012))) then v296[998 -(338 + 657)]=v22();v296[19 -15]=v22();break;end end break;end end elseif (v294==1) then v296[3 + 0]=v23();elseif (v294==(1827 -(1605 + 220))) then v296[3]=v23() -((1 + 1)^16);elseif (v294~=(854 -(526 + 325))) then else local v386=0 + 0;local v387;while true do if (v386==(0 + 0)) then v387=0;while true do if ((808 -(576 + 232))~=v387) then else v296[3 + 0]=v23() -((1 + 1)^(983 -(519 + 448)));v296[4]=v22();break;end end break;end end end v375=1 -0;end end end if (v358~=(1 + 0)) then else v293=2;break;end end break;end end end end break;end if (v292~=(1 + 0)) then else local v346=0 -0;while true do if (v346~=(456 -(394 + 62))) then else local v359=0 -0;while true do if ((0 + 0)==v359) then v295=nil;v296=nil;v359=1 + 0;end if (v359==1) then v346=275 -(202 + 72);break;end end end if (1==v346) then v292=2;break;end end end end break;end end end break;end end end v56=3;break;end if (0==v117) then local v224=751 -(25 + 726);while true do if (v224~=(188 -(111 + 77))) then else for v254=1,v61 do local v255=1878 -(1735 + 143);local v256;local v257;local v258;while true do if (v255~=(12 -(5 + 7))) then else v256=0 + 0;v257=nil;v255=1 + 0;end if (v255~=1) then else v258=nil;while true do if (v256==1) then if (v257==(1 + 0)) then v258=v21()~=(0 -0);elseif (v257==(201 -(198 + 1))) then v258=v24();elseif (v257==(14 -11)) then v258=v25();end v62[v254]=v258;break;end if ((0 -0)~=v256) then else local v339=0;while true do if (v339==(2 -1)) then v256=1 + 0;break;end if (v339~=(0 -0)) then else v257=v21();v258=nil;v339=1 -0;end end end end break;end end end v60[3 -0]=v21();v224=1;end if (v224==(1412 -(342 + 1069))) then v117=976 -(324 + 651);break;end end end end break;end end end v105=891 -(522 + 368);end if (1~=v105) then else v102=1567 -(931 + 635);break;end end end end end break;end if (v55~=(923 -(653 + 268))) then else v60=nil;v61=nil;v55=3 + 0;end end break;end if (v54==0) then local v95=0 -0;while true do if (v95==(0 + 0)) then v55=0 -0;v56=nil;v95=1 + 0;end if (v95~=(4 -3)) then else v54=1 + 0;break;end end end if (v54==(5 -2)) then local v96=0 + 0;while true do if (v96~=(1 + 0)) then else v54=758 -(130 + 624);break;end if (v96==(0 -0)) then v61=nil;v62=nil;v96=1;end end end end break;end end end local function v29(v35,v36,v37)local v63=v35[1];local v64=v35[2];local v65=v35[3];return function(...)local v70=1;local v71= -1;local v72={...};local v73=v12("#",...) -1;local function v74()local v78=v63;local v79=Const;local v80=v64;local v81=v65;local v82=v27;local v83={};local v84={};local v85={};for v91=0,v73 do if ((((5614 -(930 + 402)) -2848)==(2409 -(460 + 89 + 426))) and (v91>=v81)) then v83[v91-v81]=v72[v91 + 1];else v85[v91]=v72[v91 + 1 + 0];end end local v86=(v73-v81) + (80 -(17 + 62));local v87;local v88;while true do local v92=0 + 0;local v93;while true do if (((3007 -(279 + (1132 -654)))<=4422) and (v92==0)) then v93=0;while true do if (((1 + 0)==v93) or ((6252 -(983 + 287 + 278))<=2824)) then if (((1223 + 2360)>=(4050 -(375 + 95))) and (v88<=(54 -32))) then if ((v88<=(1579 -(451 + (2043 -925)))) or ((2442 -(170 + 396))==768)) then if (((3087 -(480 + 1083))<2334) and (v88<=4)) then if ((3031>(1270 -(214 + 341))) and (v88<=(1304 -(486 + 817)))) then if ((v88>(0 + 0)) or ((1309 + 3515)<(718 + 241))) then local v120=1254 -(1202 + 52);local v121;local v122;while true do if ((2093>(1236 -803)) and (v120==1)) then for v231=1093 -((2653 -(1714 + 179)) + 332), #v84 do local v232=947 -(361 + 586);local v233;while true do if ((v232==(307 -(46 + 261))) or ((6199 -(541 + 839))<(11907 -7647))) then v233=v84[v231];for v269=0, #v233 do local v270=0;local v271;local v272;local v273;local v274;local v275;while true do if (((14966 -10442)>=(7149 -3644)) and (v270==(1558 -(560 + (1746 -750))))) then v275=nil;while true do if ((((37 -10) + 326)<(8630 -(8807 -2258))) and (v271==2)) then while true do if (((7759 -4122)>=2025) and (v272==(1320 -(1218 + 101)))) then v275=v273[1 + 1];if (((v274==v85) and (v275>=v121)) or ((4068 -2060)>=(4896 -(147 + 673)))) then local v365=0 -0;local v366;while true do if ((v365==(1495 -(147 + 538 + 810))) or (3895<=(1022 -(272 + 264)))) then v366=0;while true do if (((311 + 56)==(1617 -(82 + 75 + 1093))) and ((45 -(8 + 37))==v366)) then v122[v275]=v274[v275];v273[2 -1]=v122;break;end end break;end end end break;end if ((v272==(0 -0)) or ((3845 -1003)<2095)) then local v349=0 -(0 + 0);local v350;while true do if ((2313==(4260 -(1083 + 864))) and ((0 + 0)==v349)) then v350=0 + 0;while true do if (((459 + 3248)==((371 -169) + 3505)) and (v350==(0 + 0))) then local v373=0 + (0 -0);while true do if (((3490 -(257 + 188))>=((2486 + 1708) -1832)) and (v373==(294 -(19 + (1783 -(527 + 982)))))) then v350=1 + 0;break;end if (((2125 + 469)==(1808 + 786)) and (v373==0)) then v273=v233[v269];v274=v273[1 -0];v373=1;end end end if ((v350==1) or ((919 + 2170)<1128)) then v272=1 + 0;break;end end break;end end end end break;end if ((((11980 -7444) -(134 + 429))==(11685 -7712)) and (v271==(0 + 0))) then v272=1918 -(1133 + 785);v273=nil;v271=1 + (1504 -(590 + 914));end if (((1034 -(119 + 914))==v271) or ((2172 + 1362)<=2923)) then local v341=0 + 0;while true do if (((3 -2)==v341) or (1223==(4092 + 34))) then v271=2 + 0;break;end if ((v341==(0 -0)) or ((49 + 2514)>3304)) then v274=nil;v275=nil;v341=1 + 0;end end end end break;end if (((4009 -1527)<((1202 + 3194) -((1446 -923) + 143))) and (0==v270)) then v271=0 -0;v272=nil;v270=1;end if ((v270==(138 -(134 + 3))) or ((1733 + 888)<=(2255 -((1864 -(27 + 331)) + 373)))) then v273=nil;v274=nil;v270=2;end end end break;end end end break;end if (((2139 -(303 + 531))<(1788 -(59 + 73))) and (v120==(1126 -(1017 + (336 -(218 + 9)))))) then local v225=0 -0;while true do if ((v225==(723 -(128 + 595))) or ((3670 -((188 -150) + 129))>4336)) then v121=v87[(180 -(7 + 171)) + 0];v122={};v225=1 + 0;end if (((6494 -4784)<(4191 + 67)) and (v225==(1351 -(296 + 1054)))) then v120=2 -1;break;end end end end else v85[v87[1528 -(976 + 550)]]();end elseif ((v88<=(7 -5)) or ((180 + 4737)<=(3169 -((1661 -(1075 + 537)) + 76)))) then v37[v87[3]]=v85[v87[2 -0]];elseif ((v88>3) or (1640==((78 + 1449) -(119 + 524)))) then v85[v87[2]]=v85[v87[2 + 1 + 0]]/v87[7 -3];else local v156=0 -0;local v157;local v158;local v159;local v160;local v161;while true do if ((v156==(1649 -(1494 + (501 -347)))) or ((636 + 51 + 762)>(5360 -(386 + 269)))) then v159=nil;v160=nil;v156=(2103 -(1456 + 77)) -(475 + 93);end if (((455 + (4835 -2155))<(3699 + 39)) and (v156==(41 -(15 + 26)))) then v157=0 + (0 -0);v158=nil;v156=168 -(133 + 34);end if ((v156==(5 -3)) or ((14084 -9580)==(553 + 74))) then v161=nil;while true do if (((3245 -(118 + 2))==(4882 -(1479 + 278))) and (v157==(1 + 0))) then local v276=0;while true do if ((v276==(931 -(851 + 79))) or ((5558 -(66 + 586))<=4685)) then v157=6 -4;break;end if ((v276==0) or (1376>=4073)) then v160=nil;v161=nil;v276=3 -(6 -4);end end end if ((v157==(1423 -(1281 + 140))) or ((2878 -(43 + 1564))>3795)) then while true do if (((1000 -(328 + 479))<3318) and (v158==0)) then local v308=0 -0;local v309;while true do if ((3415>(3027 -(413 + 728))) and ((0 -0)==v308)) then v309=0 -0;while true do if (((14632 -10109)>=3424) and (v309==0)) then local v351=0 + 0;while true do if (((0 + 0)==v351) or ((4339 + 389)==(1676 + 1515 + 1225))) then v159=v87[4 -(1 + 1)];v160=v85[v159];v351=4 -(1 + 2);end if ((v351==1) or ((7687 -3476)<(3297 -(771 + 127)))) then v309=1 + 0;break;end end end if (((1735 + 649)==2384) and (v309==(1 + 0))) then v158=1;break;end end break;end end end if (((3684 -((836 -(655 + 71)) + 39))>(733 + 1853)) and (v158==(2 -1))) then v161=v87[2 + 1];for v321=1989 -(326 + 1662),v161 do v160[v321]=v85[v159 + v321];end break;end end break;end if ((54<2205) and (v157==(0 -0))) then v158=1675 -(509 + 1166);v159=nil;v157=1 + 0;end end break;end end end elseif (((1980 -((181 -100) + 56))>(2410 -1576)) and (v88<=((1510 -(247 + 1250)) -6))) then if ((v88<=(397 -(199 + 193))) or (668==(4385 -(752 + 1086)))) then local v124=0;local v125;local v126;local v127;while true do if (((1409 + 1361)<=3033) and (v124==(0 + 0))) then v125=v87[6 -4];v126=v85[v125 + 2];v124=1 + 0;end if ((541>(151 -113)) and (v124==(810 -(5 + 804)))) then v127=v85[v125] + v126;v85[v125]=v127;v124=1 + 1;end if (((5 -3)==v124) or ((3969 + 360)==(7588 -2985))) then if ((4503>(3091 -(343 + (115 -(29 + 52))))) and (v126>0)) then if ((v127<=v85[v125 + (2 -1)]) or ((2478 + 1926)<(110 + 18 + 8))) then local v259=0 -0;local v260;local v261;while true do if ((v259==(0 + 0)) or ((197 + 95)>2511)) then v260=0;v261=nil;v259=1 -0;end if (((100 + 70)==(412 -242)) and (v259==(3 -(2 + 0)))) then while true do if (((1630 -(787 + 562))<3203) and (v260==(0 + 0))) then v261=0 + 0;while true do if ((v261==(0 -0)) or ((3254 -(205 + 1130))>=(7001 -4870))) then v70=v87[2 + 1];v85[v125 + ((30 -19) -8)]=v127;break;end end break;end end break;end end end elseif ((v127>=v85[v125 + ((2018 -938) -((1980 -1034) + 133))]) or (2767>(1189 + 2600))) then local v262=121 -(96 + 25);while true do if ((v262==(1194 -(812 + 382))) or ((2395 + 399)<2563)) then v70=v87[1 + (2 -0)];v85[v125 + (119 -(80 + 36))]=v127;break;end end end break;end end elseif ((v88==(5 + 1)) or ((5517 -(96 + 1052))==2974)) then v85[v87[1 + 1]]=v29(v80[v87[3]],nil,v37);else local v163=0 -0;local v164;local v165;local v166;local v167;local v168;while true do if ((v163==(0 -0)) or ((16532 -13078)>=(11599 -(1970 + 6037)))) then v164=0 + 0;v165=nil;v163=819 -(131 + 687);end if (((2812 + (278 -137))>=(1122 + (2480 -862))) and (v163==(2 -1))) then v166=nil;v167=nil;v163=1497 -(973 + 522);end if (((360 + 78)<=(3355 -(476 + (985 -(379 + 461))))) and (v163==(5 -3))) then v168=nil;while true do if ((1298==1298) and (v164==(0 + 0))) then local v277=1863 -((2128 -1148) + 546 + 337);while true do if (((1959 + 1372)>(5154 -2577)) and (v277==(0 + 0))) then v165=0 + 0;v166=nil;v277=(1886 -(1834 + 51)) + 0;end if ((v277==(1 + 0)) or ((4239 -(1226 + 458))<=((2624 -(921 + 279)) -515))) then v164=1 + 0;break;end end end if ((v164==2) or (2304>(10318 -(6413 -(117 + 43))))) then while true do if ((v165==(0 + 0)) or ((2147 -(1081 + 637))==1491)) then local v310=1950 -(126 + 1824);while true do if (((1732 + 405)>(16 + 181)) and (v310==(1 + 0))) then v165=743 -(303 + 439);break;end if (((0 -0)==v310) or ((640 -369)>=(3713 -2631))) then v166=v87[(1396 -(218 + 1173)) -(3 + 0)];v167={v85[v166](v85[v166 + (859 -(812 + 46))])};v310=1;end end end if ((v165==(1682 -(856 + 825))) or (2977<=1902)) then v168=0;for v323=v166,v87[2 + 0 + 2] do local v324=67 -(41 + 26);local v325;local v326;while true do if ((v324==(684 -(23 + 661))) or ((767 + 2680)<(81 + (2135 -1197)))) then v325=0 -0;v326=nil;v324=2 -1;end if ((v324==((2455 -1100) -(588 + 766))) or ((4834 -2671)>(4527 -(519 + 55)))) then while true do if (((3920 -(702 + 253))==(8441 -5476)) and ((109 -(13 + 96))==v325)) then v326=0 -0;while true do if ((((6877 + 5339) -(10497 -(627 + 887)))==(2437 + 796)) and (v326==(484 -(168 + 316)))) then v168=v168 + 1 + 0;v85[v323]=v167[v168];break;end end break;end end break;end end end break;end end break;end if ((v164==(1 + 0)) or (((4556 -3203) + 2413)<((4474 -(531 + 1151)) -(1388 + 373)))) then v167=nil;v168=nil;v164=1172 -(484 + 686);end end break;end end end elseif ((3521==((21 + 10617) -7117)) and (v88<=8)) then local v128=0 -0;local v129;local v130;local v131;while true do if ((v128==(0 + 0)) or ((1095 + 1575)==(3732 -((433 -(38 + 100)) + 864)))) then v129=0 -0;v130=nil;v128=1;end if ((v128==((1144 -(131 + 551)) -(405 + 56))) or (((6092 + 6686) -8656)<=((6017 -(408 + 598)) -(248 + (799 -(27 + 63)))))) then v131=nil;while true do if ((v129==(881 -(16 + 865))) or ((21151 -16918)<=(7179 -3135))) then local v241=0 + 0 + (1855 -(386 + 1469));while true do if ((v241==(0 + 0)) or (3964==(8767 -4619))) then v130=(112 -(36 + 76)) + 0;v131=nil;v241=1 -0;end if ((v241==(2 -1)) or (391>=1324)) then v129=1 -0;break;end end end if (((5436 -(921 + 38 + 121))>=(3509 -2630)) and (v129==(2 -1))) then while true do if (((9918 -5734)>14) and (v130==(1249 -(906 + 343)))) then v131=v85[v87[14 -10]];if ( not v131 or (1953>(4105 -(662 + 1197)))) then InstrPoint=InstrPoint + (234 -(77 + 156));else local v311=(1721 -(419 + 1302)) -0;local v312;local v313;while true do if ((((6779 -(224 + 40)) -(936 + 975))>((9992 -(148 + 888)) -6119)) and (v311==(1 + 0))) then while true do if (((8134 -3434)>=(3544 -(70 + (1035 -(138 + 567))))) and (v312==(0 + 0))) then v313=0;while true do if ((v313==0) or (4694==(4604 -(130 + 194)))) then v85[v87[2]]=v131;InstrPoint=v87[845 -(713 + 129)];break;end end break;end end break;end if (((5139 -(1586 + 163))>(676 + 1463)) and (v311==0)) then v312=0 + 0;v313=nil;v311=1;end end end break;end end break;end end break;end end elseif ((v88>(670 -(5 + 178 + 478))) or ((4327 -(24 + 50))<=(1797 -(266 + 1485)))) then local v169=1282 -(763 + 519);local v170;local v171;local v172;while true do if ((v169==(1 -0)) or (((8689 + 1590) -5940)<=(180 + 1286))) then v172={};v171=v10({},{__index=function(v242,v243)local v263=210 -(43 + 167);local v264;while true do if (((3724 -1825)<=4569) and (v263==(0 -0))) then local v301=0 -0;while true do if (((1196 -((2423 -(905 + 787)) + (160 -36)))<=962) and (v301==(0 -0))) then v264=v172[v243];return v264[1 + 0][v264[5 -3]];end end end end end,__newindex=function(v244,v245,v246)local v265=(1652 -(1451 + 201)) + 0;local v266;local v267;while true do if ((4821<=4995) and (v265==(668 -(221 + 446)))) then while true do if ((v266==(0 -0)) or ((2207 -(239 + 887))>=(1998 + 539))) then v267=v172[v245];v267[1 -0][v267[7 -5]]=v246;break;end end break;end if ((((11026 -7354) -(204 + 483))<(3595 -(79 + 84))) and (v265==(0 -0))) then v266=0 -0;v267=nil;v265=2 -1;end end end});v169=848 -(443 + 106 + 297);end if (((3939 -(191 + 114))>2477) and (v169==(2 + 0))) then for v247=1,v87[3 + 1] do local v248=0;local v249;local v250;while true do if ((v248==(513 -(221 + 292))) or ((3399 -(240 + 8))<(6683 -3775))) then local v297=551 -(302 + 249);while true do if (((1424 + 2927)>=(2322 -1290)) and (v297==(252 -(221 + 31)))) then v249=162 -((160 -84) + 86);v250=nil;v297=1;end if ((v297==(1 -0)) or ((6489 -2404)==(11906 -8685))) then v248=1 + 0;break;end end end if ((v248==(1515 -((4550 -3613) + 577))) or ((5208 -((759 -(26 + 68)) + 267))>(13352 -8365))) then while true do if (((1 + 0)==v249) or ((28 + 47 + 602)>=(783 + 916))) then if ((v250[1 + (1466 -(513 + 953))]==(1 + 17)) or ((2082 -(944 + 125 + 217))>((1251 -(184 + 368)) + 285))) then v172[v247-(1 + 0)]={v85,v250[3]};else v172[v247-(1 -0)]={v36,v250[3 + 0]};end v84[ #v84 + 1 + 0]=v172;break;end if (((1041 + 3057)==4098) and (v249==0)) then local v328=(871 + 88) -(705 + (648 -394));local v329;while true do if (((923 -(202 + 320))<(15 + 1387 + 2402)) and ((1156 -(37 + 1119))==v328)) then v329=0 -0;while true do if (((1700 + 445)<=(4107 -(157 + 79))) and (v329==(2 -1))) then v249=3 -2;break;end if ((2499<=3157) and (v329==(1485 -(733 + 752)))) then local v360=987 -(971 + 16);while true do if (((579 + 370 + 47)<2515) and (v360==0)) then v70=v70 + (2 -1);v250=v78[v70];v360=1;end if ((4751==(10714 -5963)) and (v360==(1 + 0))) then v329=2 -1;break;end end end end break;end end end end break;end end end v85[v87[2]]=v29(v170,v171,v37);break;end if ((v169==(262 -(155 + 107))) or (((2133 + 5337) -3668)<=2537)) then local v235=706 -(413 + 293);while true do if (((5585 -((2421 -(345 + 1147)) + 66))>=1864) and (v235==(0 + 0))) then v170=v80[v87[1 + 2]];v171=nil;v235=934 -(240 + 693);end if (((5389 -(543 + (1384 -898)))>=(1893 -(873 + 136))) and (1==v235)) then v169=2 -1;break;end end end end else local v173=1977 -(1192 + 785);local v174;local v175;local v176;local v177;while true do if (((5892 -2092)==(1715 + 2085)) and (v173==(3 -1))) then while true do if ((v174==(1 + 0)) or ((2519 + 768)>=(2247 + 1859))) then v177=v85[v175 + (1080 -(357 + 503 + 218))];if ((v177>(1213 -(18 + 75 + (3906 -2786)))) or ((3137 -(1368 + 204))>1746)) then if ((v176>v85[v175 + 1 + 0]) or (2417==(13216 -(10248 -(233 + 238))))) then v70=v87[2 + 1];else v85[v175 + (4 -1)]=v176;end elseif ((v176<v85[v175 + (3 -2)]) or ((14692 -9890)<=(8088 -5212))) then v70=v87[3];else v85[v175 + 1 + 2]=v176;end break;end if (((846 + 1016)<(6032 -((2623 -1198) + 149))) and (v174==(1384 -(846 + 538)))) then local v278=0;while true do if ((v278==0) or ((2602 -(95 + 118))>=(1857 + 2199))) then v175=v87[2 -(0 -0)];v176=v85[v175];v278=1;end if ((2967>=(4230 -(925 + 611))) and ((1015 -(766 + 248))==v278)) then v174=1 + 0;break;end end end end break;end if ((v173==(3 -2)) or ((5548 -(920 + 212))>=4966)) then v176=nil;v177=nil;v173=2;end if (((16630 -13021)>=(41 + 1447)) and (v173==(0 -0))) then local v236=230 -(175 + 51 + 4);while true do if ((v236==(0 -0)) or ((1389 -((1869 -(44 + 1700)) + 326))>=(2065 -(478 + 13)))) then v174=0 + 0;v175=nil;v236=1 + 0;end if (((1 -0)==v236) or (4490<3206)) then v173=1 + 0;break;end end end end end elseif (((1230 + 3225)>(1327 -989)) and (v88<=(2 + 14))) then if ((v88<=13) or ((5180 -3556)>=((4094 -(457 + 355)) + 204))) then if ((v88<=(2008 -(1612 + 385))) or (567>(2419 -(1095 + 6)))) then local v132=0 + 0;local v133;local v134;local v135;local v136;local v137;local v138;while true do if ((v132==((1 + 0) -0)) or ((27 + 6)==2023)) then v135=nil;v136=nil;v132=1 + 1;end if ((v132==(2 + 1)) or ((5178 -1056)<=(6631 -(5329 -(1185 + 769))))) then while true do if (((5398 -(773 + 180))>=2082) and (2==v133)) then v138=nil;while true do if ((v134==(0 -0)) or ((8798 -6023)<=(182 + 148 + 123))) then local v298=0;while true do if ((v298==(0 -0)) or (3163>4585)) then local v332=0 -0;while true do if (((1978 -(265 + 149))>=(15 + 494)) and (v332==((3 -2) + 0))) then v298=2 -1;break;end if (((0 -0)==v332) or ((67 -35)>=4518)) then v135=v87[2];v136,v137=v82(v85[v135](v13(v85,v135 + (3 -2),v87[12 -9])));v332=2 -1;end end end if ((v298==(1 -0)) or ((14347 -10729)<(3395 -(427 + 828)))) then v134=1821 -(1086 + 734);break;end end end if ((2==v134) or (((2977 -(815 + 1021)) -(819 + 12))>(1467 + 247))) then for v302=v135,v71 do local v303=0 -0;local v304;while true do if (((1937 -(96 + 767))==1074) and (v303==0)) then v304=1715 -(408 + 1307);while true do if ((v304==0) or (1199<=(1530 -(342 + 463)))) then v138=v138 + 1;v85[v302]=v136[v138];break;end end break;end end end break;end if ((v134==1) or ((3905 -((1380 -(1106 + 86)) + (4514 -3553)))==(5473 -3934))) then local v299=0 -0;while true do if ((v299==(1 + 0)) or (3984<(3316 + 630))) then v134=9 -7;break;end if ((((682 -134) + 885)<(2955 + 706)) and (v299==0)) then local v333=925 -(207 + 718);while true do if (((1703 -(185 + 998))<(2878 -1768)) and (v333==1)) then v299=1 + 0;break;end if (((260 -194)==(210 -144)) and (v333==(0 + 0))) then v71=(v137 + v135) -(1 + 0);v138=0 + 0;v333=1;end end end end end end break;end if ((v133==0) or ((9616 -7076)<=1388)) then local v251=0;while true do if (((2115 -1126)<(1438 + 2661)) and ((884 -(623 + 261))==v251)) then v134=0 + 0;v135=nil;v251=1339 -(419 + 919);end if ((((1038 + 3236) -(248 + 1263))>1745) and (v251==(1 -0))) then v133=4 -3;break;end end end if (((2 -1)==v133) or ((11876 -9332)<=(4263 -3307))) then local v252=0;while true do if ((v252==(681 -((208 -129) + 601))) or ((88 + 620)>(5542 -(1322 + 330)))) then v133=1 + 1;break;end if (((5450 -2252)>358) and (v252==(0 + 0))) then v136=nil;v137=nil;v252=1;end end end end break;end if ((v132==(0 -0)) or ((6940 -2930)<1978)) then v133=0 -0;v134=nil;v132=1;end if (((5401 -(312 + 566))>=(5196 -(182 + 1287))) and ((4 -2)==v132)) then v137=nil;v138=nil;v132=3 + 0;end end elseif ((v88>12) or ((1531 + 198)>=4226)) then local v178=0 + 0;local v179;local v180;local v181;while true do if ((722==(2494 -(216 + 1556))) and ((0 -0)==v178)) then v179=1597 -(1247 + 350);v180=nil;v178=1 + 0;end if (((1 + 0)==v178) or ((2930 -(289 + 248 + 305))>=(3446 -(87 + 577)))) then v181=nil;while true do if ((((696 + 2131) -(268 + 1492))<=1215) and (v179==1)) then v85[v180 + 1]=v181;v85[v180]=v181[v87[9 -5]];break;end if ((v179==(0 + 0)) or ((790 + 122 + 710)<=(2624 -(631 + 165 + 994)))) then local v281=0;while true do if (((270 + 360)<=(134 + (3922 -(1339 + 240)))) and (v281==(992 -(509 + 482)))) then v179=1 + 0;break;end if ((((21 + 7) -(12 + 16))==v281) or ((2026 -((3027 -2171) + 6))>=((3601 -(210 + 1476)) + 721))) then v180=v87[2];v181=v85[v87[11 -8]];v281=1 + 0 + 0;end end end end break;end end else local v182=0 + 0;local v183;local v184;while true do if ((574<(2829 + 2017)) and (v182==0)) then v183=0;v184=nil;v182=1;end if (((2372 + (857 -647))<(6447 -(1451 + 212))) and (v182==(2 -1))) then while true do if ((v183==(0 -(0 -0))) or (1736==(868 + 2095))) then v184=v87[1388 -((1490 -(371 + 938)) + 1205)];v85[v184]=v85[v184]();break;end end break;end end end elseif (((52 + 12)==(1575 -(444 + 1067))) and (v88<=(7 + 7))) then for v153=v87[5 -(209 -(28 + 178))],v87[10 -7] do v85[v153]=nil;end elseif ((v88==(5 + 10)) or ((1744 -1118)>=(5568 -3585))) then local v185=0 -(1198 -(240 + 958));local v186;local v187;local v188;local v189;local v190;local v191;while true do if ((v185==(139 -(82 + 55))) or (3546<(3559 -(305 + 350)))) then v190=nil;v191=nil;v185=3;end if ((v185==(0 + 0)) or (((10845 -7097) -(641 + 43))<=(3879 -(211 + 1267)))) then v186=0 + 0;v187=nil;v185=(1021 -(50 + 64)) -(377 + 529);end if ((v185==1) or ((11690 -6894)==(52 + 73))) then v188=nil;v189=nil;v185=2 + 0;end if ((v185==3) or ((614 + 960 + 2162)>4114)) then while true do if ((v186==(1 + 0)) or ((4 + 27)==(16030 -11856))) then v189=v187 + ((555 -246) -(26 + 45 + 236));v190={v85[v187](v85[v187 + 1 + 0],v85[v189])};v186=186 -(54 + 26 + 104);end if ((((1854 -(478 + 1299)) + 727)<=3811) and (v186==2)) then local v283=465 -(317 + 148);while true do if ((v283==(1 + (457 -(120 + 337)))) or ((1612 -(1008 + 32))>(5305 -2654))) then v186=(1 -0) + 2;break;end if ((v283==0) or (1578<=(161 + (164 -123)))) then for v334=1,v188 do v85[v189 + v334]=v190[v334];end v191=v190[2 -1];v283=(1 -0) + 0;end end end if ((v186==(851 -(255 + 593))) or ((4559 -(57 + 762))<2344)) then if (((3620 -(118 + 839))>(3983 -(698 + 1134))) and v191) then local v305=350 -(253 + 97);local v306;local v307;while true do if (((13796 -(12359 -(414 + 1482)))==3333) and (v305==(958 -(707 + 250)))) then while true do if (((2090 -1087)>(1291 -(889 + 92))) and (v306==(451 -(387 + 64)))) then v307=0 -0;while true do if ((((5478 + 4566) -7132)>=(2367 -(164 + (185 -(43 + 63))))) and (v307==(1149 -(701 + 448)))) then v85[v189]=v191;v70=v87[1759 -(610 + 1146)];break;end end break;end end break;end if ((v305==(0 + 0)) or ((237 + (2110 -(689 + 856)))<(637 -(91 + 53)))) then v306=1406 -(689 + 717);v307=nil;v305=1 + 0;end end else v70=v70 + (1755 -(652 + 1102));end break;end if (((5691 -2543)>=(62 + 96 + 2008)) and (v186==0)) then local v284=0 + 0;while true do if ((v284==(1507 -((2507 -(81 + 1129)) + 210))) or ((1020 + 883)>=(11956 -(18561 -10761)))) then v187=v87[(2074 -(25 + 50)) -(1732 + 265)];v188=v87[(2010 -(1661 + 331)) -(32 -18)];v284=1 + 0;end if (((3501 + 108)<((2159 -(5 + 15)) + 2555)) and (v284==(1 + 0))) then v186=1083 -(844 + 238);break;end end end end break;end end else v85[v87[2]]={};end elseif ((v88<=19) or ((2544 -((4687 -3403) + 223))>=(8934 -4823))) then if ((v88<=(23 -6)) or ((1335 + 701)>3961)) then if ((v85[v87[2]]<v87[4]) or (735>=((3536 -(56 + 636)) -(79 + 1083)))) then v70=v70 + 1 + 0;else v70=v87[3];end elseif (((5047 -2676)==2371) and (v88>(64 -46))) then v85[v87[1528 -(371 + 1155)]]=v87[(170 + 0) -((180 -120) + 107)]~=((4029 -2246) -(723 + 1060));else v85[v87[7 -5]]=v85[v87[1922 -(285 + (5480 -3846))]];end elseif ((v88<=(11 + 9)) or ((17649 -(16416 -2882))<(2335 -(31 + 27)))) then local v139=0 -0;local v140;while true do if (((4459 -((226 -55) + 1802))<=(3078 + 162)) and ((0 -0)==v139)) then v140=v87[4 -(2 + 0)];v85[v140](v13(v85,v140 + ((3130 -2318) -(657 + 154)),v87[1 + 2]));break;end end elseif (((3426 -2273)<=2685) and (v88>(1837 -(29 + 1787)))) then v36[v87[1597 -(1070 + 524)]]=v85[v87[2 -0]];else local v196=0 + 0;local v197;local v198;while true do if (((4776 -2120)==(4099 -(594 + 849))) and (v196==(1057 -((1601 -(759 + 824)) + 1038)))) then while true do if ((v197==(0 -(0 -0))) or ((2357 -1263)>4483)) then v198=v87[3 -1];v85[v198]=v85[v198](v85[v198 + (2 -1)]);break;end end break;end if (((2510 -1565)==(2577 -(759 + 873))) and ((510 -(351 + (328 -169)))==v196)) then v197=0 + 0;v198=nil;v196=1 + 0;end end end elseif ((v88<=33) or ((2679 -(371 + 344 + 1200))>=(1861 -314))) then if (((3453 -1069)>=(787 + 1170)) and (v88<=(24 + 3))) then if ((3708<(1383 + 2596)) and (v88<=24)) then if ((v88>(76 -53)) or ((1572 + 2527)<=(2458 -(278 + 655)))) then local v141=0 + 0;local v142;local v143;local v144;while true do if (((1716 -(44 + 236 + 774))<=(7778 -4926)) and (v141==(0 -0))) then v142=0 + 0 + 0;v143=nil;v141=1;end if (((1384 + 1703)<=(5536 -(850 + 393))) and (v141==1)) then v144=nil;while true do if ((v142==(1500 -(1093 + 406))) or ((2212 -(1460 + 507))==((3024 -1781) + 2161 + 603))) then for v268=v143 + (2 -1),v71 do v8(v144,v85[v268]);end break;end if (((696 + (1127 -612))<=(4109 -(724 + 1004))) and (v142==(1497 -(1167 + 330)))) then local v253=0 + 0;while true do if ((v253==(1 -0)) or ((534 + 118)>4090)) then v142=720 -(522 + 197);break;end if (((18190 -13762)==(8922 -4494)) and (v253==0)) then v143=v87[2];v144=v85[v143];v253=1;end end end end break;end end else v85[v87[(1998 -(1452 + 544)) -(0 + 0)]]=v37[v87[1975 -(438 + 1534)]];end elseif ((v88<=(95 -70)) or ((3424 -(652 + 550))<1574)) then local v146=1000 -(247 + 753);local v147;local v148;while true do if (((813 + 1210)<=(4746 -(536 + 475 + 133))) and ((2 -1)==v146)) then while true do if ((4589>(1956 + 695 + 1605)) and (v147==(621 -(572 + 49)))) then v148=v87[1 + 0 + 1];v85[v148](v85[v148 + (966 -(194 + 771))]);break;end end break;end if (((13998 -9638)>=(452 -(56 + 275))) and (v146==((3104 -1527) -(323 + 1254)))) then v147=1515 -((426 -253) + 1342);v148=nil;v146=945 -(498 + 446);end end elseif (((1884 + 334)==2218) and (v88>(44 -18))) then v85[v87[977 -(130 + (2219 -(845 + 529)))]]=v85[v87[2 + 1]][v85[v87[18 -14]]];elseif (((5439 -(907 + 361))==(6172 -2001)) and (v85[v87[2]]==v87[8 -4])) then v70=v70 + 1;else v70=v87[10 -7];end elseif ((v88<=(1725 -(1235 + 460))) or ((499 + 2592)<=(2470 -1445))) then if ((v88<=28) or ((4769 -(205 + 650))==(2552 -1419))) then if ((v87[1775 -(1092 + 681)]==v85[v87[4 + 0]]) or ((4670 -808)<=(2784 -((504 -235) + 478)))) then v70=v70 + 1;else v70=v87[2 + 1];end elseif (((481 + 414)==(2738 -(1282 + 561))) and (v88>(23 + 6))) then local v200=191 -(137 + 54);local v201;local v202;local v203;local v204;while true do if (((882 -(232 + 650))==v200) or ((2113 + 1690)==(41 + 2166))) then v201=0 -0;v202=nil;v200=1 -0;end if ((825==(1792 -(159 + (2159 -1351)))) and (v200==((1981 -(1755 + 223)) -2))) then v203=nil;v204=nil;v200=2;end if ((v200==((2983 -(597 + 934)) -(1186 + 264))) or (1262==((19920 -12069) -(5896 -(390 + 848))))) then while true do if ((1888==((6673 -3121) -(462 + 1202))) and (v201==((0 -0) -0))) then local v286=0 -0;while true do if ((v286==(1 -0)) or ((2862 -(1289 + 663))>=(8958 -5728))) then v201=1026 -(940 + 85);break;end if (((2461 -928)<=(9557 -5603)) and (v286==(0 -0))) then v202=0 -0;v203=nil;v286=1 + 0;end end end if ((v201==1) or ((100 + 401)<(1300 -(358 + 628)))) then v204=nil;while true do if (((6315 -1853)>3949) and ((0 + 0)==v202)) then local v314=633 -(278 + 355);local v315;while true do if ((2562<(6481 -3522)) and (v314==(0 + 0))) then v315=0 + 0;while true do if ((v315==1) or (4385==(382 + 1049))) then v202=1 + 0;break;end if (((755 -471)==(167 + 117)) and (v315==(0 -0))) then local v352=(0 -0) + 0;while true do if (((4821 -(21 + 697))==(4900 -(353 + 444))) and (v352==(0 -0))) then v203=v87[1 + 2];v204=v85[v203];v352=1 + 0;end if (((45 + 3267)>(5108 -(8087 -4852))) and ((647 -(348 + 298))==v352)) then v315=(2582 -(932 + 824)) -(114 + 112 + 599);break;end end end end break;end end end if ((v202==(988 -(192 + 795))) or ((2805 + 51)==(927 + 1439))) then for v336=v203 + (3 -2),v87[4] do v204=v204   .. v85[v336];end v85[v87[535 -(306 + 227)]]=v204;break;end end break;end end break;end end else local v205=0 + 0;local v206;local v207;while true do if (((1063 -411)==(1838 -(977 + 209))) and (v205==(1 + 0))) then while true do if (((0 + 0)==v206) or ((2808 -(785 + 931))>((8803 -3508) -(4428 -(985 + 994))))) then v207=v87[(9 -4) -3];v85[v207](v13(v85,v207 + 1,v71));break;end end break;end if ((v205==(0 + 0)) or ((3125 + 409)<=(854 + (359 -161)))) then v206=1496 -(265 + 1231);v207=nil;v205=1;end end end elseif ((v88<=(70 -(28 + 11))) or ((2423 -(47 + 29))<(5352 -3757))) then v85[v87[2]]=v85[v87[1 + 2]] * v85[v87[542 -(328 + 210)]];elseif ((v88==(1559 -(589 + 489 + 449))) or ((4480 -((1683 -(358 + 914)) + 408))<((5179 -(1453 + 18)) -(1234 + 384)))) then v70=v87[7 -4];else local v208=0 + 0;local v209;local v210;local v211;while true do if ((v208==(2 -1)) or (4652<(4814 -(1010 + 544)))) then v211=nil;while true do if (((1940 -(1430 -835))<(2377 + 1812)) and ((440 -(14 + 425))==v209)) then while true do if ((v210==(0 + 0)) or ((3627 -(5614 -3841))>(4650 + (754 -(433 + 140))))) then v211=v87[(933 -335) -(314 + 282)];v85[v211]=v85[v211](v13(v85,v211 + (2 -1),v87[1 + 2]));break;end end break;end if ((v209==(0 -0)) or ((114 + 406)>=3611)) then local v287=0 -0;while true do if ((v287==0) or (3817>=4344)) then v210=0;v211=nil;v287=1510 -(1256 + 253);end if (((8063 -4927)>(844 -495)) and (v287==(2 -1))) then v209=293 -(222 + 70);break;end end end end break;end if (((3116 -(1232 + 360))<=(4143 -(208 + 1230))) and (v208==(0 + 0))) then v209=0 -0;v210=nil;v208=801 -(133 + 667);end end end elseif (((1843 -(703 + (891 -(227 + 17))))<3200) and (v88<=(54 -15))) then if (((5285 -2349)==(4592 -(829 + 827))) and (v88<=(47 -11))) then if ((v88<=(93 -59)) or ((7111 -3742)==(3263 -(252 + 116)))) then v85[v87[295 -(148 + 145)]]= #v85[v87[13 -10]];elseif ((v88>(997 -(749 + 213))) or ((9815 -7515)<=(2277 -(2514 -(807 + 134))))) then if (v85[v87[1 + 1]] or (4917<=((314 + 3040) -((2290 -(1146 + 701)) + 946 + 343)))) then v70=v70 + (905 -(286 + 618));else v70=v87[3];end else v85[v87[2 + 0]]=v36[v87[5 -2]];end elseif (((3050 + 372)>=(645 + 343)) and (v88<=37)) then if ( not v85[v87[1 + 1]] or ((1152 -(63 + 8))==2188)) then v70=v70 + (4 -(3 -0));else v70=v87[2 + 1];end elseif ((v88==(149 -111)) or ((2693 + 95)==(1659 -1204))) then do return;end else local v213=0 + 0;local v214;while true do if (((1918 -(584 + 1334))==v213) or ((850 + 1675 + 1385)>4666)) then v214=v87[2 + 0 + 0];v85[v214]=v85[v214](v13(v85,v214 + ((1 + 2) -2),v71));break;end end end elseif ((v88<=(41 + 1)) or ((3371 -(211 + 224))==(2219 -(71 + 141)))) then if (((4571 -2127)<(3587 + 149 + 151)) and (v88<=(267 -(81 + 146)))) then v85[v87[(535 -(191 + 342)) + 0]][v87[7 -4]]=v85[v87[1048 -(454 + 590)]];elseif ((v88==(199 -158)) or (((4769 -2925) + 134)==(1746 + 1088))) then v85[v87[1864 -(1634 + 228)]]=v85[v87[5 -2]] + v85[v87[1 + 3]];else v85[v87[1 + 1]]=v85[v87[3]][v87[4]];end elseif ((v88<=(1375 -(236 + 1096))) or ((92 + 751 + 870)>=1980)) then v85[v87[1 + 1]]=v87[3];elseif ((v88==(1389 -((627 -491) + 1209))) or ((7416 -5268)<=(1701 -(858 + 602)))) then v85[v87[2]][v87[3]]=v87[(6 -4) + (4 -2)];else local v218=1098 -(129 + 969);local v219;local v220;local v221;local v222;while true do if (((2085 -(45 + 244 + 280))<(5862 -1808)) and (v218==0)) then v219=0;v220=nil;v218=1 -(0 + 0);end if ((v218==2) or ((3797 -(604 + 9))<=(806 -141))) then while true do if ((v219==(2 -1)) or ((5106 -(398 + 261))<=(7675 -3489))) then v222=nil;while true do if (((1901 -(99 + 140))==(3495 -((1392 -(163 + 45)) + 555 + 94))) and (v220==1)) then for v337=v221 + 1,v87[6 -3] do v8(v222,v85[v337]);end break;end if (((0 -0)==v220) or ((3960 -(459 + 579))<114)) then local v318=788 -(120 + 668);local v319;while true do if ((3116>(6428 -3603)) and (v318==(0 -0))) then v319=0 -0;while true do if (((0 + 0)==v319) or ((6 + 1 + 846)==(4754 -(3550 -2204)))) then v221=v87[4 -2];v222=v85[v221];v319=1;end if (((1625 -(456 + 529))<=(11068 -8161)) and (v319==(2 -1))) then v220=1 + (1444 -(355 + 1089));break;end end break;end end end end break;end if ((v219==(0 + 0)) or ((370 + 709)>((10143 -4593) -1857))) then local v288=0 -(0 -0);while true do if ((((5047 -(16 + 1057)) -(130 + 309))>(2814 -(476 + 111))) and (v288==(2 -1))) then v219=3 -2;break;end if ((v288==(0 -0)) or ((5716 -(1382 + 500))<=(2287 + 1025))) then v220=0;v221=nil;v288=2 -1;end end end end break;end if ((v218==(1593 -(1442 + 150))) or ((5124 -2172)==((767 -(62 + 261)) + 337))) then v221=nil;v222=nil;v218=3 -1;end end end v70=v70 + (1271 -(706 + 564));break;end if (((7722 -3820)<=(17492 -13095)) and (v93==0)) then local v103=1934 -(1033 + 901);local v104;while true do if (((2101 -(54 + 627 + 669))<(667 + 3784)) and ((1622 -(1196 + 426))==v103)) then v104=0 + 0;while true do if ((v104==0) or ((7842 -4879)==(351 -228))) then local v112=535 -(33 + 502);while true do if ((((1386 -(232 + 885)) + 246)<(3806 -(152 + 278))) and (v112==(2 -1))) then v104=1;break;end if ((v112==(0 + 0)) or (1436>=(4675 -(44 + 426)))) then v87=v78[v70];v88=v87[1436 -(1378 + 57)];v112=1399 -(1026 + 372);end end end if (((2021 -(1061 + 787))<(1635 -(422 + 165))) and (v104==((2498 -(320 + 365)) -(1261 + 551)))) then v93=1 + 0;break;end end break;end end end end break;end end end end A,B=v27(v11(v74));if  not A[1] then local v89=v35[4][v70] or "?";error("Script error at ["   .. v89   .. "]:"   .. A[2]);else return v13(A,2,B);end end;end return v29(v28(),{},v17)(...);end v15("LOL!",v9(),...);break;end if (v0==0) then v1=tonumber;v2=string.byte;v3=string.char;v0=1;end if (v0==3) then v10=setmetatable;v11=pcall;v12=select;v0=4;end if (v0==1) then v4=string.sub;v5=string.gsub;v6=string.rep;v0=2;end if (2==v0) then v7=table.concat;v8=table.insert;v9=getfenv or function()return _ENV;end;v0=3;end if (v0==4) then v13=unpack or table.unpack;v14=tonumber;v15=nil;v0=5;end end end
